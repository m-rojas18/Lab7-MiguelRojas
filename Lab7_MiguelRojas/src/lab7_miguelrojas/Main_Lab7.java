package lab7_miguelrojas;

import java.util.ArrayList;
import java.util.Random;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class Main_Lab7 extends javax.swing.JFrame {

    public Main_Lab7() {
        initComponents();
        this.setLocationRelativeTo(null);
        if (af.getArchivo().exists()) {
            af.cargarArchivo();
            refrescarListaFavoritos();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_CrearArchivo = new javax.swing.JDialog();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tf_nombreArchivo = new javax.swing.JTextField();
        cb_extension = new javax.swing.JComboBox<>();
        js_tamano = new javax.swing.JSpinner();
        jb_CrearArchivo = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jpmenu_Unidad = new javax.swing.JPopupMenu();
        jmi_moverDestacados = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jpm_Agregar = new javax.swing.JPopupMenu();
        jmi_CrearCarpeta = new javax.swing.JMenuItem();
        jmi_CrearArchivo = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jtp_paneles = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jpb_seccion1 = new javax.swing.JProgressBar();
        jScrollPane2 = new javax.swing.JScrollPane();
        jl_listaPrincipal = new javax.swing.JList<>();
        jb_regresarPrincipal = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jProgressBar4 = new javax.swing.JProgressBar();
        jScrollPane3 = new javax.swing.JScrollPane();
        jl_listaFavoritos = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jb_regresarDestacados = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jProgressBar5 = new javax.swing.JProgressBar();
        jScrollPane4 = new javax.swing.JScrollPane();
        jl_papeleria = new javax.swing.JList<>();
        jLabel5 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jpb_seccion4 = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        jl_listaAgregar = new javax.swing.JList<>();
        jb_crearArchivo = new javax.swing.JButton();
        jb_crearCarpeta = new javax.swing.JButton();
        jb_regresar = new javax.swing.JButton();

        jLabel7.setText("Nombre:");

        jLabel8.setText("Extension:");

        jLabel9.setText("Tama√±o:");

        cb_extension.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----------", "pdf", "txt", "docx", "jpg", "mp4" }));

        js_tamano.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jb_CrearArchivo.setText("Subir Archivo");
        jb_CrearArchivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_CrearArchivoMouseClicked(evt);
            }
        });

        jLabel10.setText("MB");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel3.setText("Subir Archivo");

        javax.swing.GroupLayout jd_CrearArchivoLayout = new javax.swing.GroupLayout(jd_CrearArchivo.getContentPane());
        jd_CrearArchivo.getContentPane().setLayout(jd_CrearArchivoLayout);
        jd_CrearArchivoLayout.setHorizontalGroup(
            jd_CrearArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_CrearArchivoLayout.createSequentialGroup()
                .addGroup(jd_CrearArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_CrearArchivoLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel3))
                    .addGroup(jd_CrearArchivoLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jd_CrearArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(49, 49, 49)
                        .addGroup(jd_CrearArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jd_CrearArchivoLayout.createSequentialGroup()
                                .addComponent(js_tamano, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel10))
                            .addComponent(cb_extension, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_nombreArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(206, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_CrearArchivoLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jb_CrearArchivo)
                .addGap(21, 21, 21))
        );
        jd_CrearArchivoLayout.setVerticalGroup(
            jd_CrearArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_CrearArchivoLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel3)
                .addGap(23, 23, 23)
                .addGroup(jd_CrearArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tf_nombreArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jd_CrearArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_extension, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(21, 21, 21)
                .addGroup(jd_CrearArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(js_tamano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jb_CrearArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(69, Short.MAX_VALUE))
        );

        jmi_moverDestacados.setText("Mover a Destacados");
        jmi_moverDestacados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_moverDestacadosActionPerformed(evt);
            }
        });
        jpmenu_Unidad.add(jmi_moverDestacados);

        jMenuItem2.setText("Mover a Papeleria");
        jpmenu_Unidad.add(jMenuItem2);

        jmi_CrearCarpeta.setText("Crear Nueva Carpeta");
        jpm_Agregar.add(jmi_CrearCarpeta);

        jmi_CrearArchivo.setText("Subir Archivo");
        jmi_CrearArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_CrearArchivoActionPerformed(evt);
            }
        });
        jpm_Agregar.add(jmi_CrearArchivo);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtp_paneles.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jtp_panelesStateChanged(evt);
            }
        });

        jLabel2.setText("Google Dive");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("Lab7_MiguelRojas");

        jpb_seccion1.setString("Mi Unidad");
        jpb_seccion1.setStringPainted(true);

        jl_listaPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_listaPrincipalMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jl_listaPrincipal);

        jb_regresarPrincipal.setText("<");
        jb_regresarPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_regresarPrincipalMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(234, 234, 234)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jb_regresarPrincipal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jpb_seccion1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(109, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jpb_seccion1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jb_regresarPrincipal)))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jtp_paneles.addTab("Mi Unidad", jPanel2);

        jProgressBar4.setString("Favoritos");
        jProgressBar4.setStringPainted(true);

        jScrollPane3.setViewportView(jl_listaFavoritos);

        jLabel4.setText("Lista de Favoritos");

        jb_regresarDestacados.setText("<");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(jProgressBar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jb_regresarDestacados)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addContainerGap(223, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jProgressBar4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel4)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jb_regresarDestacados)))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jtp_paneles.addTab("Destacados", jPanel5);

        jProgressBar5.setString("Papelera");
        jProgressBar5.setStringPainted(true);

        jScrollPane4.setViewportView(jl_papeleria);

        jLabel5.setText("Lista de Papeleria");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(jProgressBar5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(138, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jProgressBar5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel5)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jtp_paneles.addTab("Papelera", jPanel6);

        jpb_seccion4.setString("Agregar");
        jpb_seccion4.setStringPainted(true);

        jl_listaAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_listaAgregarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jl_listaAgregar);

        jb_crearArchivo.setText("Crear Archivo");
        jb_crearArchivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_crearArchivoMouseClicked(evt);
            }
        });

        jb_crearCarpeta.setText("Crear Carpeta");
        jb_crearCarpeta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_crearCarpetaMouseClicked(evt);
            }
        });

        jb_regresar.setText("<");
        jb_regresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_regresarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jb_regresar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jb_crearArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jb_crearCarpeta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(69, 69, 69))))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpb_seccion4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpb_seccion4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jb_regresar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jb_crearArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jb_crearCarpeta)))
                .addContainerGap(128, Short.MAX_VALUE))
        );

        jtp_paneles.addTab("Agregar", jPanel7);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtp_paneles)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtp_paneles, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_crearArchivoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_crearArchivoMouseClicked
        //Mostrar ventana crear Archivo
        jd_CrearArchivo.setModal(true);
        jd_CrearArchivo.pack();
        jd_CrearArchivo.setLocationRelativeTo(this);
        jd_CrearArchivo.setVisible(true);
    }//GEN-LAST:event_jb_crearArchivoMouseClicked

    private void jb_CrearArchivoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_CrearArchivoMouseClicked
        String nombre_archivo = null;
        String link_archivo = null;
        String extension = null;
        int tamano = 0;
        boolean crear = true;
        String nombre_padre = null;

        //Valdiar Entradas
        if (tf_nombreArchivo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(jd_CrearArchivo, "Falta ingresar el nombre del archivo.");
            crear = false;
        } else {
            nombre_archivo = tf_nombreArchivo.getText();
        }

        //Extension
        if (cb_extension.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(jd_CrearArchivo, "Falta elegir la extension del archivo.");
            crear = false;
        } else {
            extension = cb_extension.getSelectedItem().toString();
        }

        //Tama√±o
        if ((int) js_tamano.getValue() < 0) {
            JOptionPane.showMessageDialog(jd_CrearArchivo, "El tama√±o del archivo no puede ser 0");
            crear = false;
        } else {
            tamano = (int) js_tamano.getValue();
        }
        int pos_objeto = -1;
        //Validar Padre
        if (jl_listaAgregar.getSelectedIndex() >= 0) {
            ob_seleccionado = jl_listaAgregar.getSelectedValue();
            pos_objeto = jl_listaAgregar.getSelectedIndex();
            //Verificar si una carpeta fue elegida o un archivo
            //El nombre del padre solo puede ser una carpeta
            if (ob_seleccionado instanceof Carpeta) {
                nombre_padre = ((Carpeta) ob_seleccionado).getNombre_carpeta();
                link_archivo = ((Carpeta) ob_seleccionado).getLink_carpeta() + "/" + nombre_padre + "/";
            } else {
                nombre_padre = "Root";
                link_archivo = "dive.google.com/Root/";
            }
        } else {
            nombre_padre = "Root";
            link_archivo = "dive.google.com/Root/";
        }

        if (crear) {
            link_archivo = crearLink(2, link_archivo);
            //Crear Objeto
            Archivo a = new Archivo(nombre_archivo, link_archivo, extension, tamano, nombre_padre);
            //Agregar a lista archivo
            //verificar si esta dentro de una carpeta

            if (ob_seleccionado != null) {
                ((Carpeta) ob_seleccionado).getLista_carpetas_archivos().add(a);
            } else {
                root.add(a);
            }

            //Refrescar Listas
            refrescarListaPrincipal();
            JOptionPane.showMessageDialog(jd_CrearArchivo, "Se subio exitosamente el archivo!!");

            tf_nombreArchivo.setText("");
            cb_extension.setSelectedIndex(0);
            js_tamano.setValue(0);
            jd_CrearArchivo.dispose();

        }
    }//GEN-LAST:event_jb_CrearArchivoMouseClicked

    private void jb_crearCarpetaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_crearCarpetaMouseClicked
        //Crear Carpeta

        String nombre_carpeta = JOptionPane.showInputDialog(this, "Ingrese nombre de carpeta: ");

        //Generar Link
        String link_carpeta = "";
        String nombre_padre = "";
        int pos_seleccionado = jl_listaAgregar.getSelectedIndex();
        ob_seleccionado = jl_listaAgregar.getSelectedValue();
        //Verificar Objeto
        if (ob_seleccionado != null) {
            if (ob_seleccionado instanceof Carpeta) {
                nombre_padre = ((Carpeta) ob_seleccionado).getNombre_carpeta();
                link_carpeta = ((Carpeta) ob_seleccionado).getLink_carpeta() + "/" + nombre_carpeta + "/";
            }
        } else {
            nombre_padre = "Root";
            link_carpeta = "dive.google.com/Root/" + nombre_carpeta + "/";
        }
        link_carpeta = crearLink(1, link_carpeta);
        System.out.println(link_carpeta);
        //Crear Objeto
        Carpeta c = new Carpeta(nombre_carpeta, link_carpeta, nombre_padre);
        //Agregar a Lista
        //verificar si esta dentro de una carpeta
        if (ob_seleccionado != null) {
            ((Carpeta) ob_seleccionado).getLista_carpetas_archivos().add(c);
        } else {
            root.add(c);
        }
        //Refrescar Lista
        refrescarListaPrincipal();
        JOptionPane.showMessageDialog(this, "Se creo exitosamente la Carpeta!!");

    }//GEN-LAST:event_jb_crearCarpetaMouseClicked

    private void jl_listaAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_listaAgregarMouseClicked
        //MetaDown

        if (evt.isMetaDown()) {
            jpm_Agregar.show(jl_listaAgregar, jl_listaAgregar.getX(), jl_listaAgregar.getY());

        }
        //DoubleClick
        //Update Lista a la del objeto
        if (evt.getClickCount() == 2) {
            if (jl_listaAgregar.getSelectedIndex() >= 0) {

                ob_seleccionado = jl_listaAgregar.getSelectedValue();

                // System.out.println(ob_seleccionado);                
                if (ob_seleccionado instanceof Carpeta) {
                    //Conseguir Objeto
                    Carpeta c = (Carpeta) ob_seleccionado;

                    //RefrescarLista
                    DefaultListModel model = new DefaultListModel();

                    //verificar Lista
                    if (c.getLista_carpetas_archivos().isEmpty()) {
                        //Do nothing
                    } else {
                        for (Object o : c.getLista_carpetas_archivos()) {
                            if (o instanceof Archivo) {
                                model.addElement((Archivo) o);
                            } else if (o instanceof Carpeta) {
                                model.addElement((Carpeta) o);
                            }
                        }
                    }

                    jl_listaAgregar.setModel(model);
                    jpb_seccion4.setString(c.getLink_carpeta());
                    //Right Click en Double Click
                }
            }
        }
        //Selectes
        if (jl_listaAgregar.getSelectedIndex() >= 0) {
            //Conseguir Objeto
            int pos = jl_listaAgregar.getSelectedIndex();
            ob_seleccionado = jl_listaAgregar.getSelectedValue();

            if (ob_seleccionado instanceof Archivo) {
                jpb_seccion4.setString(((Archivo) ob_seleccionado).getLink_archivo());
            } else {
                jpb_seccion4.setString(((Carpeta) ob_seleccionado).getLink_carpeta());
            }

        }

    }//GEN-LAST:event_jl_listaAgregarMouseClicked

    private void jb_regresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_regresarMouseClicked
        refrescarListaPrincipal();
    }//GEN-LAST:event_jb_regresarMouseClicked

    private void jl_listaPrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_listaPrincipalMouseClicked
        //Selected
        if (jl_listaPrincipal.getSelectedIndex() >= 0) {
            //Conseguir Objeto
            int pos = jl_listaPrincipal.getSelectedIndex();
            ob_seleccionado = jl_listaPrincipal.getSelectedValue();
            if (ob_seleccionado instanceof Archivo) {
                jpb_seccion1.setString(((Archivo) ob_seleccionado).getLink_archivo());
            } else {
                jpb_seccion1.setString(((Carpeta) ob_seleccionado).getLink_carpeta());
            }
        } else {
            jpb_seccion1.setString("Mi Unidad");
        }

        //Double Click
        //Update Lista a la del objeto
        if (evt.getClickCount() == 2) {
            if (jl_listaPrincipal.getSelectedIndex() >= 0) {
                ob_seleccionado = jl_listaPrincipal.getSelectedValue();

                if (ob_seleccionado instanceof Carpeta) {
                    Carpeta c = (Carpeta) ob_seleccionado;

                    //Refrescar lista
                    DefaultListModel model = new DefaultListModel();
                    //Verificar lista
                    if (c.getLista_carpetas_archivos().isEmpty()) {
                        //do nothing
                    } else {
                        for (Object o : c.getLista_carpetas_archivos()) {
                            if (o instanceof Archivo) {
                                model.addElement((Archivo) o);
                            } else if (o instanceof Carpeta) {
                                model.addElement((Carpeta) o);
                            }
                        }
                    }
                    jl_listaPrincipal.setModel(model);
                    jpb_seccion1.setString(c.getLink_carpeta());
                    //Right Click en Double Click

                }
            }
        }
        //Right Click
        if (evt.isMetaDown()) {
            if (jl_listaPrincipal.getSelectedIndex() >= 0) {
                jpmenu_Unidad.show(jl_listaPrincipal, jl_listaPrincipal.getX(), jl_listaPrincipal.getY());
            }
        }
    }//GEN-LAST:event_jl_listaPrincipalMouseClicked

    private void jb_regresarPrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_regresarPrincipalMouseClicked
        //Accion regresar a lista principal
        refrescarListaPrincipal();
    }//GEN-LAST:event_jb_regresarPrincipalMouseClicked

    private void jmi_moverDestacadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_moverDestacadosActionPerformed
        //Mover elemento a lista de Favoritos

        //Conseguir objeto seleccionado
        ob_seleccionado = jl_listaPrincipal.getSelectedValue();
        //Agregar a lista de Favoritos
        af.getLista_favoritos().add(ob_seleccionado);
        //Escribir Lista de Favoritos
        af.escribirArchivos();
        //Refrescar Lista de Favoritos
        refrescarListaFavoritos();
        //Remover de la lista principal
        if (ob_seleccionado instanceof Carpeta) {
           root.remove(ob_seleccionado);
        } else {
            root.remove(ob_seleccionado);
        }
        //Refrescar Lista Principal
        refrescarListaPrincipal();
        JOptionPane.showMessageDialog(this, "Se agrego a favoritos exitosamente!!");

    }//GEN-LAST:event_jmi_moverDestacadosActionPerformed

    private void jmi_CrearArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_CrearArchivoActionPerformed
        //Evento Crear Archivo
        jd_CrearArchivo.setModal(true);
        jd_CrearArchivo.pack();
        jd_CrearArchivo.setLocationRelativeTo(this);
        jd_CrearArchivo.setVisible(true);
    }//GEN-LAST:event_jmi_CrearArchivoActionPerformed

    private void jtp_panelesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jtp_panelesStateChanged
        if (jtp_paneles.getSelectedIndex() == 3) {
            ob_seleccionado = null;
        }
    }//GEN-LAST:event_jtp_panelesStateChanged

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main_Lab7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main_Lab7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main_Lab7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main_Lab7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main_Lab7().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cb_extension;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JProgressBar jProgressBar4;
    private javax.swing.JProgressBar jProgressBar5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton jb_CrearArchivo;
    private javax.swing.JButton jb_crearArchivo;
    private javax.swing.JButton jb_crearCarpeta;
    private javax.swing.JButton jb_regresar;
    private javax.swing.JButton jb_regresarDestacados;
    private javax.swing.JButton jb_regresarPrincipal;
    private javax.swing.JDialog jd_CrearArchivo;
    private javax.swing.JList<Object> jl_listaAgregar;
    private javax.swing.JList<Object> jl_listaFavoritos;
    private javax.swing.JList<Object> jl_listaPrincipal;
    private javax.swing.JList<String> jl_papeleria;
    private javax.swing.JMenuItem jmi_CrearArchivo;
    private javax.swing.JMenuItem jmi_CrearCarpeta;
    private javax.swing.JMenuItem jmi_moverDestacados;
    private javax.swing.JProgressBar jpb_seccion1;
    private javax.swing.JProgressBar jpb_seccion4;
    private javax.swing.JPopupMenu jpm_Agregar;
    private javax.swing.JPopupMenu jpmenu_Unidad;
    private javax.swing.JSpinner js_tamano;
    private javax.swing.JTabbedPane jtp_paneles;
    private javax.swing.JTextField tf_nombreArchivo;
    // End of variables declaration//GEN-END:variables

    private ArrayList root = new ArrayList();
    Admin_Favoritos af = new Admin_Favoritos("./favoritos.rojas");
    Object ob_seleccionado;

    public String crearLink(int op, String t) {

        String temp = "";
        String code_may = "ABCDEFGHIJKLMNOPQRSTUVWXYz";
        String code_min = "abcdefghijklmnopqrstuvxyz";
        String code_nums = "0123456789";
        Random r = new Random();
        int opcion_random = 0;
        switch (op) {
            case 1:
                //Crear Link para Carpeta
                String link_carpeta = t;

                for (int i = 0; i < 5; i++) {
                    opcion_random = r.nextInt(2) + 0;
                    if (opcion_random == 0) {
                        link_carpeta += code_may.charAt(r.nextInt(25) + 0);
                    } else if (opcion_random == 1) {
                        link_carpeta += code_min.charAt(r.nextInt(25) + 0);
                    } else {
                        link_carpeta += code_nums.charAt(r.nextInt(25) + 0);
                    }
                }

                temp = link_carpeta;
                break;
            case 2:
                //Crear Link Archivo
                String link_archivo = t;
                for (int i = 0; i < 10; i++) {
                    opcion_random = r.nextInt(2) + 0;
                    if (opcion_random == 0) {
                        link_archivo += code_may.charAt(r.nextInt(25) + 0);
                    } else if (opcion_random == 1) {
                        link_archivo += code_min.charAt(r.nextInt(25) + 0);
                    } else {
                        link_archivo += code_nums.charAt(r.nextInt(25) + 0);
                    }
                }

                temp = link_archivo;
                break;
        }
        return temp;
    }

    public void refrescarListaPrincipal() {

        DefaultListModel model = new DefaultListModel();

        for (Object o : root) {

            if (o instanceof Archivo) {
                model.addElement((Archivo) o);
            } else if (o instanceof Carpeta) {
                model.addElement((Carpeta) o);
            }

        }
        jl_listaPrincipal.setModel(model);
        jl_listaAgregar.setModel(model);
    }

    public void refrescarListaFavoritos() {

        DefaultListModel modelo = new DefaultListModel();

        for (Object o : af.getLista_favoritos()) {
            if (o instanceof Archivo) {
                modelo.addElement((Archivo) o);
            } else if (o instanceof Carpeta) {
                modelo.addElement((Carpeta) o);
            }
        }
        jl_listaFavoritos.setModel(modelo);
    }
}
